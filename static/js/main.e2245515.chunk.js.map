{"version":3,"sources":["firebaseInstance.js","components/AuthForm.js","routes/Auth.js","routes/Nweet.js","components/NweetFactory.js","routes/home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","REACT_APP_APP_ID","app","initializeApp","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNweNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","fileRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","docRef","console","log","onClearAttachment","current","maxLength","htmlFor","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","length","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","setIsLoggedIn","init","setInit","setUserObj","onAuthStateChanged","user","Object","assign","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2245515.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage(app);\n","import React, { useState } from \"react\";\nimport { authService } from \"firebaseInstance\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"회원가입\" : \"로그인\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"로그인\" : \"회원가입\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { authService } from \"firebaseInstance\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    }\n\n    const data = await signInWithPopup(authService, provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { dbService, storageService } from \"firebaseInstance\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNweNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말 트윗을 삭제하시겠습니까?\");\n\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n\n      if (nweetObj.attachmentUrl !== \"\") {\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          {\" \"}\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState, useRef } from \"react\";\nimport { dbService, storageService } from \"firebaseInstance\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const fileInput = useRef();\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n\n      const response = await uploadString(fileRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n\n    try {\n      const docRef = await addDoc(collection(dbService, \"nweets\"), {\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl,\n      });\n      console.log(\"Document written with ID:\", docRef.id);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setNweet(\"\");\n    onClearAttachment();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const file = files[0];\n\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    fileInput.current.value = \"\";\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n        ref={fileInput}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { dbService, storageService } from \"firebaseInstance\";\nimport { addDoc, collection, onSnapshot } from \"firebase/firestore\";\nimport Nweet from \"./Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    onSnapshot(collection(dbService, \"nweets\"), (snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj?.displayName?.length\n                ? `${userObj.displayName}'의 프로필`\n                : \"프로필\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { signOut, updateProfile } from \"firebase/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"firebaseInstance\";\nimport {\n  collection,\n  query,\n  where,\n  orderBy,\n  QuerySnapshot,\n  getDocs,\n} from \"firebase/firestore\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    signOut(authService);\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    const nweetsRef = await collection(dbService, \"nweets\");\n\n    const nweetsQuery = await query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\")\n    );\n\n    const querySnapshot = await getDocs(nweetsQuery);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.data());\n    });\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, {\n        displayName: newDisplayName,\n      });\n      refreshUser();\n      setNewDisplayName(\"\");\n    }\n  };\n\n  useEffect(() => {\n    //getMyNweets();\n  });\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"이름\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../firebaseInstance\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(\"\");\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  });\n\n  const refreshUser = () => {\n    setUserObj(Object.assign({}, authService.currentUser));\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}